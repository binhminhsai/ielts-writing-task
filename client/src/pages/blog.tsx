import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { 
  Search, 
  Calendar, 
  User, 
  Clock, 
  ArrowRight, 
  BookOpen, 
  Brain, 
  Target, 
  Zap,
  Star,
  TrendingUp,
  Award
} from "lucide-react";

interface BlogPost {
  id: number;
  title: string;
  excerpt: string;
  content: string;
  author: string;
  date: string;
  readTime: string;
  category: string;
  tags: string[];
  featured: boolean;
  image: string;
}

const blogPosts: BlogPost[] = [
  {
    id: 1,
    title: "7 M·∫πo T·ª± H·ªçc IELTS Writing Hi·ªáu Qu·∫£ V·ªõi ChatGPT v√† AI",
    excerpt: "Kh√°m ph√° c√°ch s·ª≠ d·ª•ng ChatGPT v√† c√°c c√¥ng c·ª• AI kh√°c ƒë·ªÉ c·∫£i thi·ªán k·ªπ nƒÉng IELTS Writing c·ªßa b·∫°n v·ªõi chi ph√≠ g·∫ßn nh∆∞ b·∫±ng 0.",
    content: "Trong th·ªùi ƒë·∫°i c√¥ng ngh·ªá 4.0, vi·ªác h·ªçc IELTS kh√¥ng c√≤n ph·ª• thu·ªôc ho√†n to√†n v√†o c√°c kh√≥a h·ªçc ƒë·∫Øt ƒë·ªè...",
    author: "Mai Linh",
    date: "2024-01-15",
    readTime: "8 ph√∫t",
    category: "IELTS Writing",
    tags: ["ChatGPT", "AI", "T·ª± h·ªçc", "Writing"],
    featured: true,
    image: "üìù"
  },
  {
    id: 2,
    title: "L·ªô Tr√¨nh T·ª± H·ªçc IELTS 6.5+ Trong 3 Th√°ng V·ªõi C√¥ng C·ª• AI",
    excerpt: "H∆∞·ªõng d·∫´n chi ti·∫øt l·ªô tr√¨nh t·ª± h·ªçc IELTS t·ª´ 0 l√™n 6.5+ v·ªõi s·ª± h·ªó tr·ª£ c·ªßa c√°c c√¥ng c·ª• AI mi·ªÖn ph√≠ v√† tr·∫£ ph√≠.",
    content: "B·∫°n c√≥ th·ªÉ ƒë·∫°t IELTS 6.5+ ch·ªâ trong 3 th√°ng m√† kh√¥ng c·∫ßn t·ªën h√†ng ch·ª•c tri·ªáu cho c√°c kh√≥a h·ªçc...",
    author: "Tu·∫•n Anh",
    date: "2024-01-12",
    readTime: "12 ph√∫t",
    category: "L·ªô tr√¨nh h·ªçc",
    tags: ["L·ªô tr√¨nh", "AI Tools", "IELTS 6.5", "T·ª± h·ªçc"],
    featured: true,
    image: "üéØ"
  },
  {
    id: 3,
    title: "Top 10 C√¥ng C·ª• AI Mi·ªÖn Ph√≠ Cho Ng∆∞·ªùi H·ªçc Ti·∫øng Anh",
    excerpt: "Danh s√°ch c√°c c√¥ng c·ª• AI t·ªët nh·∫•t ƒë·ªÉ h·ªó tr·ª£ vi·ªác h·ªçc ti·∫øng Anh, t·ª´ ph√°t √¢m ƒë·∫øn ng·ªØ ph√°p v√† t·ª´ v·ª±ng.",
    content: "C√¥ng ngh·ªá AI ƒë√£ thay ƒë·ªïi ho√†n to√†n c√°ch ch√∫ng ta h·ªçc ngo·∫°i ng·ªØ. D∆∞·ªõi ƒë√¢y l√† 10 c√¥ng c·ª• tuy·ªát v·ªùi...",
    author: "H·ªìng Nhung",
    date: "2024-01-10",
    readTime: "6 ph√∫t",
    category: "C√¥ng c·ª• AI",
    tags: ["AI Tools", "Mi·ªÖn ph√≠", "Ti·∫øng Anh", "C√¥ng ngh·ªá"],
    featured: false,
    image: "ü§ñ"
  },
  {
    id: 4,
    title: "C√°ch S·ª≠ D·ª•ng Claude AI ƒê·ªÉ Luy·ªán Speaking IELTS Hi·ªáu Qu·∫£",
    excerpt: "H∆∞·ªõng d·∫´n chi ti·∫øt c√°ch t·∫≠n d·ª•ng Claude AI ƒë·ªÉ c·∫£i thi·ªán k·ªπ nƒÉng Speaking IELTS th√¥ng qua m√¥ ph·ªèng cu·ªôc thi th·ª±c t·∫ø.",
    content: "Claude AI l√† m·ªôt trong nh·ªØng c√¥ng c·ª• m·∫°nh m·∫Ω nh·∫•t ƒë·ªÉ luy·ªán t·∫≠p Speaking IELTS...",
    author: "Minh ƒê·ª©c",
    date: "2024-01-08",
    readTime: "10 ph√∫t",
    category: "IELTS Speaking",
    tags: ["Claude AI", "Speaking", "M√¥ ph·ªèng", "IELTS"],
    featured: false,
    image: "üéôÔ∏è"
  },
  {
    id: 5,
    title: "Chi·∫øn L∆∞·ª£c H·ªçc T·ª´ V·ª±ng IELTS Th√¥ng Minh V·ªõi Spaced Repetition",
    excerpt: "√Åp d·ª•ng thu·∫≠t to√°n Spaced Repetition k·∫øt h·ª£p AI ƒë·ªÉ ghi nh·ªõ t·ª´ v·ª±ng IELTS l√¢u d√†i v√† hi·ªáu qu·∫£.",
    content: "Spaced Repetition l√† ph∆∞∆°ng ph√°p khoa h·ªçc ƒë∆∞·ª£c ch·ª©ng minh hi·ªáu qu·∫£ trong vi·ªác ghi nh·ªõ...",
    author: "Thu H√†",
    date: "2024-01-05",
    readTime: "7 ph√∫t",
    category: "T·ª´ v·ª±ng",
    tags: ["T·ª´ v·ª±ng", "Spaced Repetition", "AI", "Ghi nh·ªõ"],
    featured: false,
    image: "üìö"
  },
  {
    id: 6,
    title: "B√≠ Quy·∫øt ƒê·∫°t Band 8.0 IELTS Writing Task 2 V·ªõi AI Coaching",
    excerpt: "Ph√¢n t√≠ch chi ti·∫øt c√°ch s·ª≠ d·ª•ng AI nh∆∞ m·ªôt coach c√° nh√¢n ƒë·ªÉ ƒë·∫°t ƒëi·ªÉm cao trong IELTS Writing Task 2.",
    content: "ƒê·ªÉ ƒë·∫°t Band 8.0 IELTS Writing Task 2, b·∫°n c·∫ßn c√≥ m·ªôt coach gi·ªèi. AI c√≥ th·ªÉ ƒë√≥ng vai tr√≤ n√†y...",
    author: "Quang Huy",
    date: "2024-01-03",
    readTime: "15 ph√∫t",
    category: "IELTS Writing",
    tags: ["Band 8.0", "Task 2", "AI Coaching", "Chi·∫øn l∆∞·ª£c"],
    featured: true,
    image: "üèÜ"
  }
];

const categories = ["T·∫•t c·∫£", "IELTS Writing", "L·ªô tr√¨nh h·ªçc", "C√¥ng c·ª• AI", "IELTS Speaking", "T·ª´ v·ª±ng"];

export default function Blog() {
  const [selectedCategory, setSelectedCategory] = useState("T·∫•t c·∫£");
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedPost, setSelectedPost] = useState<BlogPost | null>(null);

  const filteredPosts = blogPosts.filter(post => {
    const matchesCategory = selectedCategory === "T·∫•t c·∫£" || post.category === selectedCategory;
    const matchesSearch = post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         post.excerpt.toLowerCase().includes(searchTerm.toLowerCase()) ||
                         post.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));
    return matchesCategory && matchesSearch;
  });

  const featuredPosts = blogPosts.filter(post => post.featured);

  if (selectedPost) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-teal-50 to-blue-50">
        <div className="container mx-auto px-4 py-8 max-w-4xl">
          <Button 
            onClick={() => setSelectedPost(null)}
            variant="outline" 
            className="mb-6 flex items-center gap-2"
          >
            ‚Üê Quay l·∫°i Blog
          </Button>
          
          <article className="bg-white rounded-lg shadow-lg p-8">
            <div className="text-center mb-8">
              <div className="text-6xl mb-4">{selectedPost.image}</div>
              <Badge variant="secondary" className="mb-4">{selectedPost.category}</Badge>
              <h1 className="text-3xl font-bold text-gray-900 mb-4">{selectedPost.title}</h1>
              <div className="flex items-center justify-center gap-4 text-gray-600 text-sm">
                <div className="flex items-center gap-1">
                  <User className="h-4 w-4" />
                  {selectedPost.author}
                </div>
                <div className="flex items-center gap-1">
                  <Calendar className="h-4 w-4" />
                  {new Date(selectedPost.date).toLocaleDateString('vi-VN')}
                </div>
                <div className="flex items-center gap-1">
                  <Clock className="h-4 w-4" />
                  {selectedPost.readTime}
                </div>
              </div>
            </div>
            
            <div className="prose max-w-none">
              <p className="text-lg text-gray-700 leading-relaxed mb-6">{selectedPost.excerpt}</p>
              <p className="text-gray-700 leading-relaxed">{selectedPost.content}</p>
              
              <div className="mt-8 p-6 bg-teal-50 rounded-lg">
                <h3 className="text-xl font-semibold text-teal-800 mb-3">üí° L·ªùi khuy√™n t·ª´ chuy√™n gia</h3>
                <p className="text-teal-700">
                  H√£y nh·ªõ r·∫±ng vi·ªác k·∫øt h·ª£p AI v√†o qu√° tr√¨nh h·ªçc kh√¥ng c√≥ nghƒ©a l√† thay th·∫ø ho√†n to√†n vi·ªác t·ª± h·ªçc. 
                  AI l√† c√¥ng c·ª• h·ªó tr·ª£ m·∫°nh m·∫Ω, nh∆∞ng s·ª± ki√™n tr√¨ v√† th·ª±c h√†nh ƒë·ªÅu ƒë·∫∑n v·∫´n l√† ch√¨a kh√≥a th√†nh c√¥ng trong IELTS.
                </p>
              </div>
            </div>
            
            <div className="mt-8 flex flex-wrap gap-2">
              {selectedPost.tags.map(tag => (
                <Badge key={tag} variant="outline">{tag}</Badge>
              ))}
            </div>
          </article>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-teal-50 to-blue-50">
      {/* Header */}
      <div className="bg-white shadow-sm">
        <div className="container mx-auto px-4 py-12">
          <div className="text-center">
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              üéì Blog IELTS x AI
            </h1>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              Kh√°m ph√° nh·ªØng m·∫πo hay, l·ªô tr√¨nh h·ªçc hi·ªáu qu·∫£ v√† c√¥ng c·ª• AI th√¥ng minh 
              ƒë·ªÉ chinh ph·ª•c IELTS v·ªõi chi ph√≠ t·ªëi ∆∞u
            </p>
            <div className="mt-8 flex flex-wrap justify-center gap-4">
              <div className="flex items-center gap-2 text-teal-600">
                <Brain className="h-5 w-5" />
                <span className="font-medium">AI-Powered Learning</span>
              </div>
              <div className="flex items-center gap-2 text-blue-600">
                <Target className="h-5 w-5" />
                <span className="font-medium">L·ªô tr√¨nh c√° nh√¢n h√≥a</span>
              </div>
              <div className="flex items-center gap-2 text-green-600">
                <Zap className="h-5 w-5" />
                <span className="font-medium">Chi ph√≠ t·ªëi ∆∞u</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div className="container mx-auto px-4 py-8">
        {/* Featured Posts */}
        <section className="mb-12">
          <h2 className="text-2xl font-bold text-gray-900 mb-6 flex items-center gap-2">
            <Star className="h-6 w-6 text-yellow-500" />
            B√†i vi·∫øt n·ªïi b·∫≠t
          </h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {featuredPosts.map(post => (
              <Card key={post.id} className="hover:shadow-lg transition-shadow cursor-pointer">
                <CardHeader>
                  <div className="text-4xl mb-2">{post.image}</div>
                  <Badge variant="secondary" className="w-fit">{post.category}</Badge>
                  <CardTitle className="text-lg">{post.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-gray-600 text-sm mb-4">{post.excerpt}</p>
                  <div className="flex items-center justify-between text-xs text-gray-500 mb-4">
                    <span>{post.author}</span>
                    <span>{post.readTime}</span>
                  </div>
                  <Button 
                    onClick={() => setSelectedPost(post)}
                    variant="outline" 
                    size="sm" 
                    className="w-full"
                  >
                    ƒê·ªçc ti·∫øp <ArrowRight className="h-4 w-4 ml-1" />
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        {/* Search and Filter */}
        <section className="mb-8">
          <div className="flex flex-col md:flex-row gap-4 mb-6">
            <div className="relative flex-1">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4" />
              <Input
                placeholder="T√¨m ki·∫øm b√†i vi·∫øt..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10"
              />
            </div>
          </div>
          
          <div className="flex flex-wrap gap-2">
            {categories.map(category => (
              <Button
                key={category}
                variant={selectedCategory === category ? "default" : "outline"}
                size="sm"
                onClick={() => setSelectedCategory(category)}
                className={selectedCategory === category ? "bg-teal-600 hover:bg-teal-700" : ""}
              >
                {category}
              </Button>
            ))}
          </div>
        </section>

        {/* All Posts */}
        <section>
          <h2 className="text-2xl font-bold text-gray-900 mb-6 flex items-center gap-2">
            <BookOpen className="h-6 w-6 text-teal-600" />
            T·∫•t c·∫£ b√†i vi·∫øt
          </h2>
          <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {filteredPosts.map(post => (
              <Card key={post.id} className="hover:shadow-lg transition-shadow cursor-pointer">
                <CardHeader>
                  <div className="text-4xl mb-2">{post.image}</div>
                  <Badge variant="outline" className="w-fit">{post.category}</Badge>
                  <CardTitle className="text-lg">{post.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-gray-600 text-sm mb-4">{post.excerpt}</p>
                  <div className="flex items-center justify-between text-xs text-gray-500 mb-4">
                    <div className="flex items-center gap-1">
                      <User className="h-3 w-3" />
                      {post.author}
                    </div>
                    <div className="flex items-center gap-1">
                      <Clock className="h-3 w-3" />
                      {post.readTime}
                    </div>
                  </div>
                  <div className="flex flex-wrap gap-1 mb-4">
                    {post.tags.slice(0, 2).map(tag => (
                      <Badge key={tag} variant="outline" className="text-xs">{tag}</Badge>
                    ))}
                  </div>
                  <Button 
                    onClick={() => setSelectedPost(post)}
                    variant="outline" 
                    size="sm" 
                    className="w-full"
                  >
                    ƒê·ªçc ti·∫øp <ArrowRight className="h-4 w-4 ml-1" />
                  </Button>
                </CardContent>
              </Card>
            ))}
          </div>
        </section>

        {/* Newsletter Signup */}
        <section className="mt-16 bg-white rounded-lg shadow-lg p-8 text-center">
          <div className="max-w-2xl mx-auto">
            <div className="text-4xl mb-4">üìß</div>
            <h3 className="text-2xl font-bold text-gray-900 mb-4">
              Nh·∫≠n m·∫πo h·ªçc IELTS m·ªõi nh·∫•t
            </h3>
            <p className="text-gray-600 mb-6">
              ƒêƒÉng k√Ω nh·∫≠n b·∫£n tin h√†ng tu·∫ßn v·ªõi nh·ªØng m·∫πo hay, c√¥ng c·ª• AI m·ªõi v√† 
              l·ªô tr√¨nh h·ªçc IELTS hi·ªáu qu·∫£ nh·∫•t
            </p>
            <div className="flex gap-4 max-w-md mx-auto">
              <Input placeholder="Email c·ªßa b·∫°n..." className="flex-1" />
              <Button className="bg-teal-600 hover:bg-teal-700">
                ƒêƒÉng k√Ω
              </Button>
            </div>
            <p className="text-xs text-gray-500 mt-3">
              Ch√∫ng t√¥i kh√¥ng spam. B·∫°n c√≥ th·ªÉ h·ªßy ƒëƒÉng k√Ω b·∫•t c·ª© l√∫c n√†o.
            </p>
          </div>
        </section>
      </div>
    </div>
  );
}